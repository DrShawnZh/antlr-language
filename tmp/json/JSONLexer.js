// Generated from ./Json.g4 by ANTLR 4.9
// jshint ignore: start
import antlr4 from 'antlr4';



const serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786",
    "\u5964\u0002\ry\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0003\u0002\u0003\u0002\u0003\u0003\u0003",
    "\u0003\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003",
    "\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\b\u0003\b\u0003",
    "\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003",
    "\n\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0007\u000bC",
    "\n\u000b\f\u000b\u000e\u000bF\u000b\u000b\u0003\u000b\u0003\u000b\u0003",
    "\f\u0003\f\u0003\f\u0005\fM\n\f\u0003\r\u0003\r\u0003\r\u0003\r\u0003",
    "\r\u0003\r\u0003\u000e\u0003\u000e\u0003\u000f\u0005\u000fX\n\u000f",
    "\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f\u0005\u000f^\n\u000f",
    "\u0003\u000f\u0005\u000fa\n\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u000f\u0005\u000fg\n\u000f\u0003\u000f\u0005\u000fj\n\u000f\u0003",
    "\u0010\u0003\u0010\u0003\u0010\u0007\u0010o\n\u0010\f\u0010\u000e\u0010",
    "r\u000b\u0010\u0003\u0011\u0003\u0011\u0005\u0011v\n\u0011\u0003\u0011",
    "\u0003\u0011\u0002\u0002\u0012\u0003\u0003\u0005\u0004\u0007\u0005\t",
    "\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017\u0002",
    "\u0019\u0002\u001b\u0002\u001d\r\u001f\u0002!\u0002\u0003\u0002\t\u0004",
    "\u0002$$^^\n\u0002$$11^^ddhhppttvv\u0005\u00022;CHch\u0003\u00023;\u0003",
    "\u00022;\u0004\u0002GGgg\u0004\u0002--//\u0002~\u0002\u0003\u0003\u0002",
    "\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007\u0003\u0002",
    "\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b\u0003\u0002",
    "\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f\u0003\u0002",
    "\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013\u0003\u0002",
    "\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002",
    "\u0002\u0002\u0003#\u0003\u0002\u0002\u0002\u0005%\u0003\u0002\u0002",
    "\u0002\u0007\'\u0003\u0002\u0002\u0002\t)\u0003\u0002\u0002\u0002\u000b",
    "+\u0003\u0002\u0002\u0002\r-\u0003\u0002\u0002\u0002\u000f/\u0003\u0002",
    "\u0002\u0002\u00114\u0003\u0002\u0002\u0002\u0013:\u0003\u0002\u0002",
    "\u0002\u0015?\u0003\u0002\u0002\u0002\u0017I\u0003\u0002\u0002\u0002",
    "\u0019N\u0003\u0002\u0002\u0002\u001bT\u0003\u0002\u0002\u0002\u001d",
    "i\u0003\u0002\u0002\u0002\u001fk\u0003\u0002\u0002\u0002!s\u0003\u0002",
    "\u0002\u0002#$\u0007}\u0002\u0002$\u0004\u0003\u0002\u0002\u0002%&\u0007",
    "\u007f\u0002\u0002&\u0006\u0003\u0002\u0002\u0002\'(\u0007<\u0002\u0002",
    "(\b\u0003\u0002\u0002\u0002)*\u0007]\u0002\u0002*\n\u0003\u0002\u0002",
    "\u0002+,\u0007.\u0002\u0002,\f\u0003\u0002\u0002\u0002-.\u0007_\u0002",
    "\u0002.\u000e\u0003\u0002\u0002\u0002/0\u0007v\u0002\u000201\u0007t",
    "\u0002\u000212\u0007w\u0002\u000223\u0007g\u0002\u00023\u0010\u0003",
    "\u0002\u0002\u000245\u0007h\u0002\u000256\u0007c\u0002\u000267\u0007",
    "n\u0002\u000278\u0007u\u0002\u000289\u0007g\u0002\u00029\u0012\u0003",
    "\u0002\u0002\u0002:;\u0007p\u0002\u0002;<\u0007w\u0002\u0002<=\u0007",
    "n\u0002\u0002=>\u0007n\u0002\u0002>\u0014\u0003\u0002\u0002\u0002?D",
    "\u0007$\u0002\u0002@C\u0005\u0017\f\u0002AC\n\u0002\u0002\u0002B@\u0003",
    "\u0002\u0002\u0002BA\u0003\u0002\u0002\u0002CF\u0003\u0002\u0002\u0002",
    "DB\u0003\u0002\u0002\u0002DE\u0003\u0002\u0002\u0002EG\u0003\u0002\u0002",
    "\u0002FD\u0003\u0002\u0002\u0002GH\u0007$\u0002\u0002H\u0016\u0003\u0002",
    "\u0002\u0002IL\u0007^\u0002\u0002JM\t\u0003\u0002\u0002KM\u0005\u0019",
    "\r\u0002LJ\u0003\u0002\u0002\u0002LK\u0003\u0002\u0002\u0002M\u0018",
    "\u0003\u0002\u0002\u0002NO\u0007w\u0002\u0002OP\u0005\u001b\u000e\u0002",
    "PQ\u0005\u001b\u000e\u0002QR\u0005\u001b\u000e\u0002RS\u0005\u001b\u000e",
    "\u0002S\u001a\u0003\u0002\u0002\u0002TU\t\u0004\u0002\u0002U\u001c\u0003",
    "\u0002\u0002\u0002VX\u0007/\u0002\u0002WV\u0003\u0002\u0002\u0002WX",
    "\u0003\u0002\u0002\u0002XY\u0003\u0002\u0002\u0002YZ\u0005\u001f\u0010",
    "\u0002Z[\u00070\u0002\u0002[]\u0005\u001f\u0010\u0002\\^\u0005!\u0011",
    "\u0002]\\\u0003\u0002\u0002\u0002]^\u0003\u0002\u0002\u0002^j\u0003",
    "\u0002\u0002\u0002_a\u0007/\u0002\u0002`_\u0003\u0002\u0002\u0002`a",
    "\u0003\u0002\u0002\u0002ab\u0003\u0002\u0002\u0002bc\u0005\u001f\u0010",
    "\u0002cd\u0005!\u0011\u0002dj\u0003\u0002\u0002\u0002eg\u0007/\u0002",
    "\u0002fe\u0003\u0002\u0002\u0002fg\u0003\u0002\u0002\u0002gh\u0003\u0002",
    "\u0002\u0002hj\u0005\u001f\u0010\u0002iW\u0003\u0002\u0002\u0002i`\u0003",
    "\u0002\u0002\u0002if\u0003\u0002\u0002\u0002j\u001e\u0003\u0002\u0002",
    "\u0002kl\u00072\u0002\u0002lp\t\u0005\u0002\u0002mo\t\u0006\u0002\u0002",
    "nm\u0003\u0002\u0002\u0002or\u0003\u0002\u0002\u0002pn\u0003\u0002\u0002",
    "\u0002pq\u0003\u0002\u0002\u0002q \u0003\u0002\u0002\u0002rp\u0003\u0002",
    "\u0002\u0002su\t\u0007\u0002\u0002tv\t\b\u0002\u0002ut\u0003\u0002\u0002",
    "\u0002uv\u0003\u0002\u0002\u0002vw\u0003\u0002\u0002\u0002wx\u0005\u001f",
    "\u0010\u0002x\"\u0003\u0002\u0002\u0002\r\u0002BDLW]`fipu\u0002"].join("");


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class JsonLexer extends antlr4.Lexer {

    static grammarFileName = "Json.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'{'", "'}'", "':'", "'['", "','", "']'", 
                         "'true'", "'false'", "'null'" ];
	static symbolicNames = [ null, null, null, null, null, null, null, null, 
                          null, null, "STRING", "NUMBER" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                      "T__7", "T__8", "STRING", "ESC", "UNICODE", "HEX", 
                      "NUMBER", "INT", "EXP" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    }

    get atn() {
        return atn;
    }
}

JsonLexer.EOF = antlr4.Token.EOF;
JsonLexer.T__0 = 1;
JsonLexer.T__1 = 2;
JsonLexer.T__2 = 3;
JsonLexer.T__3 = 4;
JsonLexer.T__4 = 5;
JsonLexer.T__5 = 6;
JsonLexer.T__6 = 7;
JsonLexer.T__7 = 8;
JsonLexer.T__8 = 9;
JsonLexer.STRING = 10;
JsonLexer.NUMBER = 11;



